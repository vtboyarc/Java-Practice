import java.util.HashSet;
import java.util.LinkedHashSet;
import java.util.Set;
import java.util.TreeSet;


public class App {
	public static void main(String[] args) {
		
		//HashSet does not retain order, might change order each time you run it
		Set<String> set1 = new HashSet<String>();
		
		//LinkedHashSet remembers the order you added items in
		Set<String> set2 = new LinkedHashSet<String>();
		
		//TreeSet sorts in natural order, ie aplhabetical, etc
		//useful if you want to sort a large list in alpahbetical or numerical
		Set<String> set3 = new TreeSet<String>();
		
		set1.add("dog");
		set1.add("cat");
		set1.add("mouse");
		set1.add("snake");
		set1.add("bear");
		
		set2.add("dog");
		set2.add("cat");
		set2.add("mouse");
		set2.add("snake");
		set2.add("bear");
		
		set3.add("dog");
		set3.add("cat");
		set3.add("mouse");
		set3.add("snake");
		set3.add("bear");
		
		//adding a duplicate item does nothing
		//sets only contain unique items
		//useful if you want to sort out duplicates 
		set1.add("mouse");
		
		System.out.println(set1);
		
		System.out.println(set2);
		
		System.out.println(set3);
		
		// Iteration
		for(String element: set1) {
			System.out.println(element);
		}
		
		//Does set contain a given item?
	}
}
