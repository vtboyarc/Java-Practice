import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;

class StringLengthComparator implements Comparator<String> {

	@Override
	public int compare(String s1, String s2) {
		
		int len1 = s1.length();
		int len2 = s2.length();
		
		if(len1 > len2) {
			return 1;
		}
		//return a negative for less than
		else if(len1 < len2) {
			return -1;
		}
		return 0;
	}
	
}

class AlphabeticalComparator implements Comparator<String> {

	@Override
	public int compare(String s1, String s2) {
		
		//just add a negative sign to s1, ie -s1.compare etc, for reverse alphabetical order
		return s1.compareTo(s2);

	}
	
}

public class App {

	public static void main(String[] args) {
		List<String> animals = new ArrayList<String>();
		
		animals.add("cat");
		animals.add("tiger");
		animals.add("lion");
		animals.add("snake");
		animals.add("mongoose");
		animals.add("elephant");
		
		//sorts the array in order of string length
		//uncomment this line and comment out the alpha one, to sort by string length
		//Collections.sort(animals, new StringLengthComparator());
		
		//sorts by alphabetical order
		Collections.sort(animals, new AlphabeticalComparator());
		
		for(String animal: animals) {
			System.out.println(animal);
		}
		
		List<Integer> numbers = new ArrayList<Integer>();
		
		numbers.add(3);
		numbers.add(36);
		numbers.add(73);
		numbers.add(40);
		numbers.add(1);
		
		//will sort by numerical order
		Collections.sort(numbers, new Comparator<Integer>() {

			@Override
			public int compare(Integer o1, Integer o2) {
				// TODO Auto-generated method stub
				return 0;
			}
			
		});
		
		for(Integer number: numbers) {
			System.out.println(number);
		}
	}
}
